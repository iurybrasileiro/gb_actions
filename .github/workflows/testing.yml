name: Create release candidate

on:
  workflow_dispatch:

jobs:
  create_release_candidate_branch:
    name: Calculate version
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - uses: actions/checkout@v3
        with:
          ref: development
          fetch-depth: 0

      - uses: actions/setup-dotnet@v2

      - name: Define branch name
        id: define_branch
        run: echo "branch_name=release-candidate/3.0.0" >> $GITHUB_OUTPUT

      - name: Create release candidate branch
        run: |
          git fetch
          git pull
          git checkout -b ${{ steps.define_branch.outputs.branch_name }}
          git remote set-url origin https://github.com/iurybrasileiro/gb_actions.git
          git push origin ${{ steps.define_branch.outputs.branch_name }}

      - name: Create pull request
        uses: actions/github-script@v6
        id: create_pull_request
        with:
          script: |
            const branch_name = ${{ steps.define_branch.outputs.branch_name }}
            const response = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Merge ${branch_name} into testing`,
              head: branch_name,
              base: 'testing',
            });

            core.setOutput("pull_request_number", response.data.number);

            console.log(response)

      - name: Merge pull request
        uses: actions/github-script@v6
        with:
          script: |
            const response = await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ steps.create_pull_request.outputs.pull_request_number }},
            });

            console.log(response)

      - name: Delete branch
        uses: actions/github-script@v6
        with:
          script: |
            const branch_name = ${{ steps.define_branch.outputs.branch_name }}
            const response = await github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `heads/${branch_name}`,
            });

            console.log(response)
