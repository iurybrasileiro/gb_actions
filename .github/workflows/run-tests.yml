name: Run Tests

on:
  pull_request:
    branches:
      - main

jobs:
  deploy:
    name: Build and run tests
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    environment: DEV

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for existing 'Running e2e tests' comment
        uses: actions/github-script@v6
        id: check_comment
        with:
          script: |
            const pull_number = context.issue.number;
            const commentBody = "Running e2e test";

            // Post the review comment using the GitHub client API
            const comments = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number,
              per_page: 100,
            })

            const sortedComments = comments.data.sort((a, b) => {
              return new Date(b.submitted_at) - new Date(a.submitted_at);
            });
            
            const hasRunningTestComment = sortedComments.find(comment => comment.body == commentBody)

            if (hasRunningTestComment) {
              const replies = await octokit.rest.pulls.listCommentsForReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pull_number,
                review_id: hasRunningTestComment.id,
              });

              console.log(replies)

              return
            }

            console.log(comments)
          
 
      - name: Add PR number in build success hook file
        if: github.event_name == 'pull_request'
        run: sed -i "2s/^/GB_PR_NUMBER=${{ github.event.number }}\n/" scripts/eas-build-on-success.sh

      - name: Create 'Running e2e test' review comment
        uses: actions/github-script@v6
        id: create_review_comment
        with:
          script: |
            const pull_number = context.issue.number;
            const comment = "Running e2e test";

            // Post the review comment using the GitHub client API
            const review = await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number,
              event: 'REQUEST_CHANGES',
              body: comment
            });

            // Output the review ID
            core.setOutput("comment_id", review.data.id);


      - name: Add comment ID to build success hook file
        run: sed -i "3s/^/COMMENT_ID=${{ steps.create_review_comment.outputs.comment_id }}\n/" scripts/eas-build-on-success.sh

      - name: Cat scripts/eas-build-on-success.sh
        run: cat scripts/eas-build-on-success.sh
