name: Post run test

on:
  workflow_dispatch:
    inputs:
      pull_request_id:
        description: "ID of the pull request"
        required: true
      review_comment_id:
        description: "ID of review comment"
        required: true
      message:
        description: "Message"
        required: true

jobs:
  postTest:
    runs-on: ubuntu-latest
    steps:
      - name: Reply 'Running e2e test' message with test result
        uses: actions/github-script@v6
        if: false
        id: create_reply
        with:
          script: |
            const response = await github.rest.pulls.createReplyForReviewComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: '${{ github.event.inputs.pull_request_id }}',
              comment_id: '${{ github.event.inputs.review_comment_id }}',
              body: '${{ github.event.inputs.message }}',
            });
      
      - name: Resolve conversation
        uses: actions/github-script@v6
        id: resolve_conversation
        with:
          script: |
            # const response = await github.rest.pulls.listCommentsForReview({
            #   owner: context.repo.owner,
            #   repo: context.repo.repo,
            #   pull_number: '${{ github.event.inputs.pull_request_id }}',
            #   review_id: '${{ github.event.inputs.review_comment_id }}',
            # });

            const response = await github.rest.pulls.listReviewComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: '${{ github.event.inputs.pull_request_id }}',
            });

            console.log(response.data);

            # const replies = response.data;

            # if (replies.length < 2) {
            #   core.setFailed('No replies');
            # }

            # const androidComment = replies.find(reply => reply.body.contains("ANDROID"))
            # const iosComment = replies.find(reply => reply.body.contains("IOS"))

            # if (!androidComment || !iosComment) {
            #   core.setFailed('Android or iOS not found');
            # }

            # const isAllTestsPassed = replies.every(reply => reply.body.contains('PASSED'))

            # if (!isAllTestsPassed) {
            #   core.setFailed('One or both tests failed for Android or iOS');
            #   return
            # }

            # await github.rest.pulls.dismissReview({
            #   owner: context.repo.owner,
            #   repo: context.repo.repo,
            #   pull_number: '${{ github.event.inputs.pull_request_id }}',
            #   review_id: '${{ github.event.inputs.review_comment_id }}',
            #   message: 'All tests passed âœ…',
            # });
